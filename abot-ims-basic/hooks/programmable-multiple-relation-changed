#!/bin/bash
set -e
ABOT_DEPLOY_DIR=/etc/rebaca-test-suite

juju-log "Invoking dns-relation"

dns_ip=$(relation-get private-address)
if [ -z "${dns_ip}" ]; then
    juju-log "No data sent yet from DNS"
    exit 0
fi

juju-log "DNS IP: ${dns_ip}"

# Set our DNS requirements
id=$(cut -d/ -f2 <<< ${JUJU_UNIT_NAME})
public_fqdn=$(unit-get public-address)

public_hostname=`hostname | cut -d"." -f1`
juju-log "Public Hostname: ${public_hostname}, public_address: ${public_fqdn}"

if [[ ${public_fqdn} =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]];
then
    ip=${public_fqdn}
    juju-log "Unit get address - ${ip}"
    relation-set domain=$(config-get zone)
    DNS_JSON=$(${ABOT_DEPLOY_DIR}/bin/generate_dns_records ${ip} ${public_hostname}  abot-ims-basic-${id})
    juju-log "DNS_JSON:${DNS_JSON}"
    relation-set resources="${DNS_JSON}"
else
    ip=`dig +short ${public_fqdn}`
    juju-log "After dig and short unit address is ${ip}"
    relation-set domain=$(config-get zone)
    DNS_JSON=$(${ABOT_DEPLOY_DIR}/bin/generate_dns_records ${ip} ${public_hostname}  abot-ims-basic-${id})
    juju-log "DNS_JSON:${DNS_JSON}"
    relation-set resources="${DNS_JSON}"
fi


#update DNS server using DNSMASQ
echo nameserver ${dns_ip} > /etc/dnsmasq.resolv.conf
grep -v ^RESOLV_CONF= /etc/default/dnsmasq > /tmp/dnsmasq.$$
mv /tmp/dnsmasq.$$ /etc/default/dnsmasq
echo RESOLV_CONF=/etc/dnsmasq.resolv.conf >> /etc/default/dnsmasq
service dnsmasq restart
sleep 5
# Change Resolvconf order and make dnsmasq on top
dnsmasq=lo.dnsmasq
resolvconf=/etc/resolvconf
loinet=`grep  ^[a-z] /etc/resolvconf/interface-order | head -n1`
if [ $loinet != $dnsmasq ]
then
    cp /etc/resolvconf/interface-order /etc/resolvconf/interface-order.orig
    sed  '/'$dnsmasq'/d' /etc/resolvconf/interface-order.orig > /etc/resolvconf/interface-order
    sed -i '/'$loinet'/i lo.dnsmasq' /etc/resolvconf/interface-order
    service dnsmasq restart
    resolvconf -u
else
    exit 0
fi

# Verify DNS record to make sure that IMS dns is working properly
if [[ `dig +short ${public_fqdn}` =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]
then
    juju-log "Verifying ${public_fqdn} in dns "
    exit
elif [[ "${public_fqdn}" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]
then
    juju-log "Verifying ${public_fqdn} in dns "
    exit
else
    juju-log "Unable to fetch ${public_fqdn} changing  dns order to original"
    cp /etc/resolvconf/interface-order.orig /etc/resolvconf/interface-order
    resolvconf -u
fi

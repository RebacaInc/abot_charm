#!/bin/bash
# Here do anything needed to install the service
# i.e. apt-get install -y foo  or  bzr branch http://myserver/mycode /srv/webroot
# Make sure this hook exits cleanly and is idempotent, common problems here are
# failing to account for a debconf question on a dependency, or trying to pull
# from github without installing git first.

set -eu

abot_volte_basic_url=`config-get abot_volte_basic_repo_url`
abot_volte_basic_package_name=`config-get abot_volte_basic_package`
sipp_url=`config-get sipp_repo_url`
DIR=/etc/rebaca-test-suite
mkdir -p $DIR

juju-log "Updating existing Ubuntu libraries..."
apt-get update
juju-log "Existing Ubuntu libraries update done."

juju-log "Installing Java."
cd $CHARM_DIR/lib/
. scripts/install_java
juju-log "Java Installed."

#Installing dependencies for abot-volte-basic
apt-get -y install apache2

juju-log "Installing Maven..."
apt-get update
apt-get -y install maven
juju-log "Maven installation done."

#Download the ABOT package and install it

#Install the package using dpkg
juju-log "Install abot package completed ..."

if [[ ! -d "$CHARM_DIR/payload" ]]; then
    mkdir $CHARM_DIR/payload
fi

#Download the ABOT package and install it
if [[ ! -f "$CHARM_DIR/payload/$abot_volte_basic_package_name" ]]; then
    wget $abot_volte_basic_url/$abot_volte_basic_package_name -O $CHARM_DIR/payload/$abot_volte_basic_package_name
fi

dpkg --install $CHARM_DIR/payload/$abot_volte_basic_package_name

#Install libjson
apt-get -y install libjson0

#Install RabbitMQ Server
apt-get -y install librabbitmq-dev
apt-get -y install rabbitmq-server

#Install the PHP plugin
apt-get -y install libapache2-mod-php

juju-log "SIPP dependency"
apt-get -y install pcaputils libncursesw5-dev libncurses5-dev libpcap-dev libssl-dev libssl1.0.0 openssl libssl-dev build-essential make
juju-log "SIPP installation done."

juju-log "Downloading Sipp"

cd /home/ubuntu
wget $sipp_url

tar -xvzf sipp-3.3.tar.gz

cd sipp-3.3

juju-log "Compiling Sipp"
make pcapplay_ossl

juju-log "Completed installing Sipp"

juju-log "installing dnsmasq"
apt-get -q -y --force-yes install dnsmasq

juju-log "Completed installing dnsmasq"

#Install python pip
apt-get -y install python-pip

#Install the elasticSearch python libraries
pip install elasticsearch

#Install flask python libraries and initialize GUI
pip install flask

#Check for flask process and stop it if it it running
flask_process_id=`ps -ef | grep python | grep app.py | awk '{print $2}'`
if [ ! -z $flask_process_id ]; then
  juju-log "Stopping flask process with id $flask_process_id"
  kill -9 $flask_process_id
fi

cd $CHARM_DIR/lib/abot
juju-log "Starting flask ..."
python app.py&

#Clean out the symlinks from the DIR folder
find $DIR/ -maxdepth 1 -type l -delete

#Create symlinks to installation
mkdir -p $DIR/tags

ln -s $CHARM_DIR/lib/bin $DIR/bin
ln -s $CHARM_DIR/lib/log $DIR/log
ln -s $CHARM_DIR/lib/featureFiles $DIR/featureFiles
ln -s $CHARM_DIR/lib/config $DIR/config
ln -s $CHARM_DIR/lib/jar $DIR/jar
ln -s $CHARM_DIR/lib/scenarios $DIR/scenarios

#Copy init script of oaisim 
cp $DIR/bin/oaisim.conf /etc/init 

#Change permissions of the charm/lib folders 
chown -R ubuntu:ubuntu $CHARM_DIR/lib

#Change permissions of the openair5G folders
chown -R ubuntu:ubuntu /srv

#Generate ssh key for root user
if [ ! -f /home/ubuntu/.ssh/id_rsa.pub ];
   then
      ssh-keygen -t rsa -N "" -f /root/.ssh/id_rsa
      pub_key=`cat /root/.ssh/id_rsa.pub`
      echo "$pub_key" | sed 's/\r//' >> /root/.ssh/authorized_keys
  else
      pub_key=`cat /root/.ssh/id_rsa.pub`
      echo "$pub_key" | sed 's/\r//' >> /root/.ssh/authorized_keys
fi

if [ ! -f /home/ubuntu/.ssh/id_rsa.pub ];
   then
    sudo -u ubuntu bash << EOF
    ssh-keygen -t rsa -N "" -f /home/ubuntu/.ssh/id_rsa
EOF
      pub_key=`cat /home/ubuntu/.ssh/id_rsa.pub`
      echo "$pub_key" | sed 's/\r//' >> /home/ubuntu/.ssh/authorized_keys
  else
      pub_key=`cat /home/ubuntu/.ssh/id_rsa.pub`
      echo "$pub_key" | sed 's/\r//' >> /home/ubuntu/.ssh/authorized_keys
fi


open-port 80/tcp

juju-log "ABot Install complete!"
status-set maintenance "ABot installed! Waiting to start..."
